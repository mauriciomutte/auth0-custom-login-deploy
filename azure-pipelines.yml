# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - develop
      - release/qa

pr:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  BRANCH_NAME: $(Build.SourceBranchName)

stages:
  - stage: lint_and_tests
    condition: eq(variables['Build.Reason'], 'PullRequest')
    displayName: Lint, tests and code quality
    jobs:
      - job: build
        steps:
          - task: NodeTool@0
            displayName: 'Use Node 16.x'
            inputs:
              versionSpec: '16.x'

          - script: yarn --frozen-lockfile
            displayName: 'Yarn install package'

          - script: yarn build
            displayName: 'Run build'
      - job: lint
        steps:
          - script: yarn lint
            displayName: 'Run lint'

  - stage: build_and_upload
    condition: ne(variables['Build.Reason'], 'PullRequest')
    displayName: Build and upload statics
    jobs:
      - job: build
        displayName: Build and export
        steps:
          - task: NodeTool@0
            displayName: 'Use Node 16.x'
            inputs:
              versionSpec: '16.x'
          - script: yarn --frozen-lockfile
            displayName: 'Yarn install package'
          - script: yarn build && yarn export
            displayName: 'Run build and export'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: |
                **/**
                !**/node_modules/**
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            condition: succeededOrFailed()
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'drop'
      - job: upload_static_files_prd
        displayName: Upload static files in PROD
        dependsOn: build
        condition: contains(variables['Build.SourceBranchName'], 'main')
        steps:
          - checkout: none
          - download: current
            artifact: drop
          - task: S3Upload@1
            inputs:
              awsCredentials: 'AWS Pipes'
              regionName: 'us-east-1'
              bucketName: 'dev-mutte0-idp'
              sourceFolder: '$(Pipeline.Workspace)/drop/out'
              globExpressions: '_next/**'
              targetFolder: '$(Build.SourceBranchName)'
              filesAcl: 'public-read'
      - job: upload_static_files_dev
        dependsOn: build
        displayName: Upload static files in DEV
        condition: |
          or(
            contains(variables['Build.SourceBranchName'], 'qa'),
            contains(variables['Build.SourceBranchName'], 'develop')
          )
        steps:
          - checkout: none
          - download: current
            artifact: drop
          - task: S3Upload@1
            inputs:
              awsCredentials: 'AWS Pipes'
              regionName: 'us-east-1'
              bucketName: 'dev-mutte0-idp-dev'
              sourceFolder: '$(Pipeline.Workspace)/drop/out'
              globExpressions: '_next/**'
              targetFolder: '$(Build.SourceBranchName)'
              filesAcl: 'public-read'

  - stage: deploy_dev
    displayName: Deploy to Auth0 DEV
    dependsOn: build_and_upload
    condition: |
      and(
        in(dependencies.build_and_upload.result, 'Succeeded', 'SucceededWithIssues'),
        contains(variables['Build.SourceBranch'], 'refs/heads/develop')
      )
    jobs:
      - deployment: Deploy
        environment: 'dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none
                - task: NodeTool@0
                  displayName: 'Use Node 16.x'
                  inputs:
                    versionSpec: '16.x'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn install --frozen-lockfile'
                  displayName: 'yarn install'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn deploy:auth0'
                  displayName: 'Deploy HTML in Auth0'
                  env:
                    AUTH0_DOMAIN: $(AUTH0_DOMAIN)
                    AUTH0_CLIENT_ID: $(AUTH0_CLIENT_ID)
                    AUTH0_CLIENT_SECRET: $(AUTH0_CLIENT_SECRET)

  - stage: deploy_qa
    displayName: Deploy to Auth0 QA
    dependsOn: build_and_upload
    condition: |
      and(
        in(dependencies.build_and_upload.result, 'Succeeded', 'SucceededWithIssues'),
        contains(variables['Build.SourceBranch'], 'refs/heads/release/qa')
      )
    jobs:
      - deployment: Deploy
        environment: 'qa'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none
                - task: NodeTool@0
                  displayName: 'Use Node 16.x'
                  inputs:
                    versionSpec: '16.x'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn install --frozen-lockfile'
                  displayName: 'yarn install'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn deploy:auth0'
                  displayName: 'Deploy HTML in Auth0'
                  env:
                    AUTH0_DOMAIN: $(AUTH0_DOMAIN)
                    AUTH0_CLIENT_ID: $(AUTH0_CLIENT_ID)
                    AUTH0_CLIENT_SECRET: $(AUTH0_CLIENT_SECRET)

  - stage: deploy_prd
    displayName: Deploy to Auth0 PROD
    dependsOn: build_and_upload
    condition: |
      and(
        in(dependencies.build_and_upload.result, 'Succeeded', 'SucceededWithIssues'),
        contains(variables['Build.SourceBranch'], 'refs/heads/main')
      )
    jobs:
      - deployment: Deploy
        environment: 'prd'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none
                - task: NodeTool@0
                  displayName: 'Use Node 16.x'
                  inputs:
                    versionSpec: '16.x'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn install --frozen-lockfile'
                  displayName: 'yarn install'

                - script: 'cd $(Pipeline.Workspace)/drop && yarn deploy:auth0'
                  displayName: 'Deploy HTML in Auth0'
                  env:
                    AUTH0_DOMAIN: $(AUTH0_DOMAIN)
                    AUTH0_CLIENT_ID: $(AUTH0_CLIENT_ID)
                    AUTH0_CLIENT_SECRET: $(AUTH0_CLIENT_SECRET)
